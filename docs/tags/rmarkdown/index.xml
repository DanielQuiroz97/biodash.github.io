<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rmarkdown | BioDASH</title>
    <link>https://biodash.github.io/tags/rmarkdown/</link>
      <atom:link href="https://biodash.github.io/tags/rmarkdown/index.xml" rel="self" type="application/rss+xml" />
    <description>rmarkdown</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 24 Jan 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://biodash.github.io/images/logo_hu6407506e646a281542ecb299640680ce_37988_300x300_fit_lanczos_2.png</url>
      <title>rmarkdown</title>
      <link>https://biodash.github.io/tags/rmarkdown/</link>
    </image>
    
    <item>
      <title>Session 7: R Markdown</title>
      <link>https://biodash.github.io/codeclub/07_rmarkdown/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://biodash.github.io/codeclub/07_rmarkdown/</guid>
      <description>&lt;p&gt;&lt;br&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;R Markdown consists of an amazing ecosystem of R packages to produce many types of technical content. Its signature capability is that is can &lt;strong&gt;run R code and print the code along with its results and nicely formatted prose.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To understand R Markdown, we need to learn about three new things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt;, a very lightweight text formatting language.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Code chunks&lt;/strong&gt;, which allow us to incorporate R code that can be executed and whose results we can display in text, figures, and tables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The YAML header&lt;/strong&gt;, which encodes metadata about the output, such as the desired output format and specific formatting features.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We&amp;rsquo;ll focus on HTML page output, but will glimpse at the &lt;strong&gt;many possibilities for the output format&lt;/strong&gt;: with R Markdown, it is possible to create not just technical reports, but also slide decks, websites, books, scientific articles, and so on.&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;setup&#34;&gt;Setup&lt;/h4&gt;
&lt;p&gt;At the core of the R Markdown ecosystem is the &lt;em&gt;rmarkdown&lt;/em&gt; package. We need to install this but don&amp;rsquo;t need to load it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;
&lt;pre class=&#39;chroma&#39;&gt;&lt;code class=&#39;language-r&#39; data-lang=&#39;r&#39;&gt;&lt;span class=&#39;nf&#39;&gt;&lt;a href=&#39;https://rdrr.io/r/utils/install.packages.html&#39;&gt;install.packages&lt;/a&gt;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&#34;rmarkdown&#34;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Inside your directory for Code Club, create a directory for this week:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;
&lt;pre class=&#39;chroma&#39;&gt;&lt;code class=&#39;language-r&#39; data-lang=&#39;r&#39;&gt;&lt;span class=&#39;nf&#39;&gt;&lt;a href=&#39;https://rdrr.io/r/base/files2.html&#39;&gt;dir.create&lt;/a&gt;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&#39;S07&#39;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;h4 id=&#34;first-an-example&#34;&gt;First, an example&lt;/h4&gt;
&lt;p&gt;Before we go into details, let&amp;rsquo;s first see a quick demonstration of what we are talking about:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;code&gt;File&lt;/code&gt; =&amp;gt; &lt;code&gt;New File&lt;/code&gt; =&amp;gt; &lt;code&gt;R Markdown&lt;/code&gt;, change the &lt;em&gt;Title&lt;/em&gt; to &amp;ldquo;Markdown demo&amp;rdquo;, and click &lt;code&gt;OK&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Take a look at the R Markdown document, and notice that there seems to be some sort of header (=&amp;gt; &lt;em&gt;&lt;strong&gt;YAML&lt;/strong&gt;&lt;/em&gt;), followed by R code wrapped in strange constructs with backticks (=&amp;gt; &lt;em&gt;&lt;strong&gt;Code chunks&lt;/strong&gt;&lt;/em&gt;), and plain written text (=&amp;gt; &lt;em&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/em&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Before we can create output, we need to save the document. Click the &lt;code&gt;Save&lt;/code&gt; button and save the files as &lt;code&gt;demo.Rmd&lt;/code&gt; inside your newly created directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now click the &lt;strong&gt;Knit button&lt;/strong&gt; in one of the top bars, and a document should show up in a pop-up or the Viewer pane. This is the &lt;em&gt;rendered output&lt;/em&gt; from the R Markdown document.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Notice that the YAML header is not printed, at least not verbatim, while some of the code is printed, and we also see code output including a plot!&lt;/p&gt;
&lt;p&gt;This is what the raw and rendered output look side-by-side:&lt;/p&gt;
&lt;p align=&#34;center&#34;&gt;
&lt;img src=img/rmd-demo-both.png width=&#34;1000px&#34;&gt;
&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll now talk about Markdown, code chunks, and the YAML header in turn.&lt;/p&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h2 id=&#34;i-markdown&#34;&gt;I: Markdown&lt;/h2&gt;
&lt;p&gt;Markdown is a very lightweight language to format plain text files, which evolved from simple in-line formatting applied in emails before those started using HTML.&lt;/p&gt;
&lt;p&gt;Need to emphasize a word without being able to make it italic or bold? How about adding emphasis with asterisks *like so*?&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;an-overview-of-commonly-used-markdown-syntax&#34;&gt;An overview of commonly used Markdown syntax&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Syntax&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;# My Title&lt;/td&gt;
&lt;td&gt;Header level 1 (largest)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;## My Section&lt;/td&gt;
&lt;td&gt;Header level 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;### My Subsection&lt;/td&gt;
&lt;td&gt;Header level 3 &amp;ndash; and so forth&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*italic* or _italic_&lt;/td&gt;
&lt;td&gt;&lt;em&gt;italic&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;**bold** or __bold__&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;bold&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[Markdown Guide](markdownguide.org)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href=&#34;https://markdownguide.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown Guide&lt;/a&gt; (Link with custom text)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;![](path/to/figure.png)&lt;/td&gt;
&lt;td&gt;Figure&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- List item&lt;/td&gt;
&lt;td&gt;Unordered (bulleted) list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1. List item&lt;/td&gt;
&lt;td&gt;Ordered (numbered) list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;`inline code`&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;inline code&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;```&lt;/code&gt; &lt;br&gt; &amp;hellip;code&amp;hellip; &lt;br&gt; &lt;code&gt;```&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Generic code block (for formatting only) &lt;br&gt; (&lt;em&gt;Alternative syntax: 4 leading spaces.&lt;/em&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;```r&lt;/code&gt; &lt;br&gt; &amp;hellip;code&amp;hellip; &lt;br&gt; &lt;code&gt;```&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;r&lt;/code&gt; code block (for formatting only)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;---&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Horizontal rule (line)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;To see this formatting in action, see below an example of a raw Markdown file on the left, and its &lt;em&gt;rendered&lt;/em&gt; (formatted) output on the right:&lt;/p&gt;
&lt;p align=&#34;center&#34;&gt;
&lt;img src=img/md-demo.png width=&#34;2000px&#34;&gt;
&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
&lt;div&gt;
&lt;p&gt;&amp;ldquo;Plain&amp;rdquo; Markdown files have the extension &lt;code&gt;.md&lt;/code&gt;, whereas R Markdown files have the extension &lt;code&gt;.Rmd&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h2 id=&#34;ii-integrating-r-code&#34;&gt;II: Integrating R code&lt;/h2&gt;
&lt;p&gt;As we saw above, plain Markdown has syntax for code &lt;em&gt;formatting&lt;/em&gt;, but the code is not actually being executed. &lt;strong&gt;In R Markdown, however, we are able run code!&lt;/strong&gt; The syntax to do so is only slightly modified from what we saw above:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For &lt;strong&gt;inline code&lt;/strong&gt;, we add &lt;code&gt;r&lt;/code&gt; and a space before the R code that is to be executed, for example:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Raw&lt;/th&gt;
&lt;th&gt;Rendered&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;There are &lt;code&gt;`r 365*24`&lt;/code&gt; hours in a year&lt;/td&gt;
&lt;td&gt;There are 8760 hours in a year&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To generate &lt;em&gt;code blocks&lt;/em&gt;, which we call &lt;strong&gt;code chunks&lt;/strong&gt; in an R Markdown context,&lt;br&gt;
we add r &lt;em&gt;inside curly braces&lt;/em&gt;: &lt;code&gt;```{r}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We can optionally add settings that we want to apply to that chunk and/or chunk labels:&lt;br&gt;
&lt;code&gt;```{r, option1=value, ...}&lt;/code&gt; or &lt;code&gt;```{r, unique-chunk-label, option1=value, ...}&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
&lt;div&gt;
&lt;p&gt;RStudio keyboard shortcut to insert a code chunk: &lt;kbd&gt;Cmd/Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;I&lt;/kbd&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h4 id=&#34;code-chunk-examples&#34;&gt;Code chunk examples&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A code chunk with &lt;strong&gt;default options&lt;/strong&gt;&amp;hellip;&lt;/p&gt;
&lt;p align=&#34;left&#34;&gt;
&lt;img src=img/example-chunk-1.png width=&#34;100%&#34;&gt;
&lt;/p&gt;
&lt;p&gt;&amp;hellip;will be executed and shown followed by the output of the code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;
&lt;pre class=&#39;chroma&#39;&gt;&lt;code class=&#39;language-r&#39; data-lang=&#39;r&#39;&gt;&lt;span class=&#39;nf&#39;&gt;&lt;a href=&#39;https://rdrr.io/r/base/mean.html&#39;&gt;mean&lt;/a&gt;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;penguins&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;$&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;bill_depth_mm&lt;/span&gt;, na.rm &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;kc&#39;&gt;TRUE&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt;

&lt;span class=&#39;c&#39;&gt;#&amp;gt; [1] 17.15117&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As an example of using a &lt;strong&gt;code chunk option&lt;/strong&gt;, we will disable printing the code using &lt;code&gt;echo=FALSE&lt;/code&gt; (the code will still run and the output will still be shown):&lt;/p&gt;
&lt;p align=&#34;left&#34;&gt;
&lt;img src=img/example-chunk-2.png width=&#34;100%&#34;&gt;
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;
&lt;pre class=&#39;chroma&#39;&gt;&lt;code class=&#39;language-r&#39; data-lang=&#39;r&#39;&gt;&lt;span class=&#39;c&#39;&gt;#&amp;gt; [1] 17.15117&lt;/span&gt;
 &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Figures&lt;/strong&gt; can, of course, also be printed:&lt;/p&gt;
&lt;p align=&#34;left&#34;&gt;
&lt;img src=img/example-chunk-3.png width=&#34;100%&#34;&gt;
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;
&lt;pre class=&#39;chroma&#39;&gt;&lt;code class=&#39;language-r&#39; data-lang=&#39;r&#39;&gt;&lt;span class=&#39;nf&#39;&gt;ggplot&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nv&#39;&gt;penguins&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt;
  &lt;span class=&#39;nf&#39;&gt;geom_point&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nf&#39;&gt;aes&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;x &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;bill_length_mm&lt;/span&gt;, y &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;bill_depth_mm&lt;/span&gt;, color &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;species&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt;
  &lt;span class=&#39;nf&#39;&gt;theme_bw&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt;

&lt;span class=&#39;c&#39;&gt;#&amp;gt; Warning: Removed 2 rows containing missing values (geom_point).&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;
&lt;p&gt;&lt;img src=&#34;figs/unnamed-chunk-6-1.png&#34; alt=&#34;Fig. 1: Bill length and depth are correlated within species, &amp;lt;br&amp;gt; and differ subtly between species.&#34; width=&#34;700px&#34; /&gt;&lt;/p&gt;
&lt;p class=&#34;caption&#34;&gt;
Fig. 1: Bill length and depth are correlated within species, &lt;br&gt; and differ subtly between species.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Above, we added a &lt;strong&gt;caption&lt;/strong&gt; for the figure using the &lt;code&gt;fig.cap&lt;/code&gt; argument (with a little trick to force a line break, using the &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; HTML syntax).&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
&lt;div&gt;
&lt;h4 id=&#34;code-chunk-options&#34;&gt;Code chunk options&lt;/h4&gt;
&lt;p&gt;Here is an overview of some the most commonly made &lt;em&gt;changes to defaults&lt;/em&gt; for code chunk options. This quickly gets confusing, but you&amp;rsquo;ll get the hang of it after experimenting a bit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;echo=FALSE&lt;/code&gt; &amp;ndash; Don&amp;rsquo;t print the code in the output file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eval=FALSE&lt;/code&gt; &amp;ndash; Don&amp;rsquo;t run (&lt;strong&gt;eval&lt;/strong&gt;uate) the code.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;include=FALSE&lt;/code&gt; &amp;ndash; Run but don&amp;rsquo;t print the code, nor any of its results.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;results=&amp;quot;hide&amp;quot;&lt;/code&gt; &amp;ndash; Don&amp;rsquo;t print the &lt;em&gt;text output&lt;/em&gt; of the code.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fig.show=&amp;quot;hide&amp;quot;&lt;/code&gt; &amp;ndash; Don&amp;rsquo;t print &lt;em&gt;figures&lt;/em&gt; produced by the code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Furthermore, you can use &lt;code&gt;message=FALSE&lt;/code&gt; and &lt;code&gt;warning=FALSE&lt;/code&gt; to suppress any &lt;em&gt;messages&lt;/em&gt; (like the output when loading packages) and &lt;em&gt;warnings&lt;/em&gt; (like the warning for the penguin figure above), respectively, that R might produce.&lt;/p&gt;
&lt;p&gt;For figures, the following options are especially useful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fig.cap=&amp;quot;My caption&amp;quot;&lt;/code&gt; &amp;ndash; Include a caption.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fig.asp=0.6&lt;/code&gt; &amp;ndash; Aspect ratio.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fig.width=6&lt;/code&gt; &amp;ndash; Width of in inches: same as sizing in regular R code.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fig.height=9.6&lt;/code&gt; &amp;ndash; Height in inches: same as sizing in regular R code.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;out.width=&amp;quot;70%&amp;quot;&lt;/code&gt; &amp;ndash; Figure width as &lt;em&gt;printed in the document&lt;/em&gt; (in &lt;code&gt;%&lt;/code&gt; or pixels, &lt;code&gt;px&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;out.height=&amp;quot;500px&amp;quot;&lt;/code&gt; &amp;ndash; Figure height as &lt;em&gt;printed in the document&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, if your document takes a long time to knit, use &lt;code&gt;cache=TRUE&lt;/code&gt; to enable caching of results.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
&lt;div&gt;
&lt;h4 id=&#34;default-chunk-options&#34;&gt;Default chunk options&lt;/h4&gt;
&lt;p&gt;It is often practical to set default chunk options for the entire document, and you can do so with the &lt;code&gt;opts_chunk$set()&lt;/code&gt; function as shown below:&lt;/p&gt;
&lt;p align=&#34;left&#34;&gt;
&lt;img src=img/global-chunk.png width=&#34;100%&#34;&gt;
&lt;/p&gt;
&lt;p&gt;This is usually done in separate &lt;em&gt;&amp;ldquo;global setup chunk&amp;rdquo;&lt;/em&gt; at the start of the document.&lt;br&gt;
Whenever necessary, you can then override these defaults for specific chunks.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h2 id=&#34;iii-the-yaml-header&#34;&gt;III: The YAML header&lt;/h2&gt;
&lt;p&gt;YAML (&lt;em&gt;&amp;ldquo;YAML Ain&amp;rsquo;t Markup Language&amp;rdquo;&lt;/em&gt;) is a simple format commonly used for &lt;em&gt;configuration files&lt;/em&gt;, which allows you to provide key-value pairs such as &lt;code&gt;author: John Doe&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In R Markdown files, it is used as a &lt;strong&gt;header&lt;/strong&gt; which configures certain aspects of the output, especially the formatting. Put another way, the YAML header &lt;em&gt;contains the metadata&lt;/em&gt; for the output.&lt;/p&gt;
&lt;h4 id=&#34;a-basic-yaml-header&#34;&gt;A basic YAML header&lt;/h4&gt;
&lt;p&gt;Here is an example of a very basic YAML header:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
author: My name
title: The document&#39;s title
output: html_document
---
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note the lines which just contain &lt;strong&gt;three dashes&lt;/strong&gt;, which mark the beginning and the end of the YAML header.&lt;/p&gt;
&lt;h4 id=&#34;adding-options&#34;&gt;Adding options&lt;/h4&gt;
&lt;p&gt;Often, a value (like &lt;code&gt;html_document&lt;/code&gt;) can itself be given key-value pairs to specify additional options &amp;ndash; see the example below where we include a Table of Contents (&lt;code&gt;toc&lt;/code&gt;) and also set it to &amp;ldquo;float&amp;rdquo;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
output:
  html_document:
    toc: true
    toc_float: true
---
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Note the syntax changes (newlines and added indentation) between the above two examples, this is perhaps a little awkward and often leads to mistakes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Indentation in YAML is using two or four spaces (no tabs!) per indentation level, and it is &lt;em&gt;sensitive to indentation errors&lt;/em&gt;. (Fortunately, RStudio inserts spaces for tabs by default &amp;ndash; check/set in &lt;code&gt;Tools&lt;/code&gt; =&amp;gt; &lt;code&gt;Global Options&lt;/code&gt; =&amp;gt; &lt;code&gt;Code&lt;/code&gt; =&amp;gt; &lt;code&gt;Editing&lt;/code&gt;.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
&lt;div&gt;
&lt;h4 id=&#34;some-options-for-html_document-output&#34;&gt;Some options for &lt;code&gt;html_document&lt;/code&gt; output&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;html_document&lt;/code&gt; is the most commonly used output format for R Markdown documents, and here are few particularly useful options to customize the output:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;code_download: true&lt;/code&gt; &amp;ndash; Include a button to download the code.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;code_folding: hide&lt;/code&gt; &amp;ndash; Using &lt;code&gt;hide&lt;/code&gt; or &lt;code&gt;show&lt;/code&gt; will enable the folding of code chunks, with &lt;code&gt;hide&lt;/code&gt; hiding them by default.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toc: true&lt;/code&gt; &amp;ndash; Include a table of contents (Also: &lt;code&gt;toc_depth: 3&lt;/code&gt; sets depth to 3, &lt;code&gt;toc_float: true&lt;/code&gt; lets the TOC &amp;ldquo;float&amp;rdquo; as you scroll down the document).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;number_sections: true&lt;/code&gt; &amp;ndash; Number the section headings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;df_print: paged&lt;/code&gt; &amp;ndash; Get nicely formatted and paged data frame printing (also try: &lt;code&gt;df_print: kable&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme: cerulean&lt;/code&gt; &amp;ndash; Use a pre-built theme, controlling the overall look and feel of the document. See 
&lt;a href=&#34;https://www.datadreaming.org/post/r-markdown-theme-gallery/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; for a visual overview.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;
&lt;p align=&#34;center&#34;&gt;
&lt;img src=img/rmd-3themes.png width=&#34;100%&#34;&gt;
&lt;figcaption&gt;
Three HTML document &lt;code&gt;theme&lt;/code&gt; options: &lt;code&gt;darkly&lt;/code&gt;, &lt;code&gt;flatly&lt;/code&gt;, and &lt;code&gt;cerulean&lt;/code&gt;.
&lt;/figcaption&gt;
&lt;/p&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h2 id=&#34;iv-r-markdown-and-rstudio&#34;&gt;IV: R Markdown and RStudio&lt;/h2&gt;
&lt;p&gt;The RMarkdown ecosystem of packages is being developed by RStudio, so it should come as no surprise that the RStudio IDE has some nice RMarkdown functionality.&lt;/p&gt;
&lt;h4 id=&#34;knitting-and-previewing-your-document&#34;&gt;Knitting and previewing your document&lt;/h4&gt;
&lt;p&gt;The process of rendering an R Markdown file into another format, as specified by the YAML header, is called &lt;strong&gt;knitting&lt;/strong&gt;. We already saw the button to knit the current document (keyboard shortcut: &lt;kbd&gt;Cmd/Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;K&lt;/kbd&gt;).&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
&lt;div&gt;
&lt;p&gt;If you get preview pop-up windows in RStudio, click the cog wheel icon next to the Knit button, and then select &amp;ldquo;&lt;em&gt;Preview in Viewer Pane&lt;/em&gt;&amp;rdquo;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;Instead of knitting the entire document, you can also &lt;strong&gt;run individual code chunks&lt;/strong&gt; using the green &amp;ldquo;play button&amp;rdquo; (or &lt;kbd&gt;Cmd/Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Enter&lt;/kbd&gt;), or all code chunks up until the current one (button to the left of the play button).&lt;/p&gt;
&lt;p&gt;For a &lt;strong&gt;live preview (!)&lt;/strong&gt; of R Markdown output for your active document,&lt;br&gt;
use the &lt;em&gt;infinite moon reader&lt;/em&gt; from the &lt;em&gt;xaringan&lt;/em&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;
&lt;pre class=&#39;chroma&#39;&gt;&lt;code class=&#39;language-r&#39; data-lang=&#39;r&#39;&gt;&lt;span class=&#39;nf&#39;&gt;&lt;a href=&#39;https://rdrr.io/r/utils/install.packages.html&#39;&gt;install.packages&lt;/a&gt;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&#34;xaringan&#34;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt;

&lt;span class=&#39;c&#39;&gt;# Simply running the function without arguments will start the preview:&lt;/span&gt;
&lt;span class=&#39;nf&#39;&gt;xaringan&lt;/span&gt;&lt;span class=&#39;nf&#39;&gt;::&lt;/span&gt;&lt;span class=&#39;nf&#39;&gt;&lt;a href=&#39;https://rdrr.io/pkg/xaringan/man/inf_mr.html&#39;&gt;inf_mr&lt;/a&gt;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt;

&lt;span class=&#39;c&#39;&gt;# To shut down the preview server, if needed, run `servr::daemon_stop()`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;h4 id=&#34;visual-markdown-editor&#34;&gt;Visual Markdown Editor&lt;/h4&gt;
&lt;p&gt;If your RStudio version is at least 1.4 (Click &lt;code&gt;Help&lt;/code&gt; =&amp;gt; &lt;code&gt;About RStudio&lt;/code&gt;), which was released last fall, you can also use the &lt;em&gt;Visual Markdown Editor&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This makes writing in R Markdown almost like using a word processor, and also includes many other features such as better citation support with Zotero integration. Read more about the visual editor 
&lt;a href=&#34;https://rstudio.github.io/visual-markdown-editing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To switch between the visual editor and regular (&amp;ldquo;source&amp;rdquo;) editing mode, click the A-shaped ruler button in the top-right corner or press &lt;kbd&gt;Cmd/Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;F4&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;This is what our document looks like in the visual editor &amp;ndash; kind of intermediate between the raw R Markdown and the rendered output:&lt;/p&gt;
&lt;p align=&#34;center&#34;&gt;
&lt;img src=img/visual-editor.png width=&#34;70%&#34;&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h2 id=&#34;v-a-single-source-doc-many-output-formats&#34;&gt;V: A single source doc, many output formats!&lt;/h2&gt;
&lt;p&gt;One of the greatest features of R Markdown is that you can output to many formats. So from one source document, or very similar variants, you can create completely different output depending on what you need.&lt;/p&gt;
&lt;h4 id=&#34;built-in-output-formats&#34;&gt;Built-in output formats&lt;/h4&gt;
&lt;p&gt;The 
&lt;a href=&#34;https://rmarkdown.rstudio.com/docs/reference/index.html#section-output-formats&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;built-in output formats&lt;/a&gt;, which can be used with just the &lt;em&gt;rmarkdown&lt;/em&gt; package, are listed below. These include HTML, PDF, Word, PowerPoint, and different HTML slide show formats!&lt;/p&gt;
&lt;p align=&#34;center&#34;&gt;
&lt;img src=img/rmarkdown-output-formats.png width=&#34;80%&#34;&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;extension-output-formats&#34;&gt;Extension output formats&lt;/h4&gt;
&lt;p&gt;It&amp;rsquo;s worth highlighting a few of the output formats that can be used with the following packages in the R Markdown ecosystem:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://rstudio.github.io/distill/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;distill&lt;/em&gt;&lt;/a&gt; &amp;ndash; An output format geared towards technical content, e.g. with extended support for equations, citations, and footnotes. Can also create websites.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/rstudio/rticles&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;rticles&lt;/em&gt;&lt;/a&gt; &amp;ndash; R Markdown templates to format output for specific scientific journals.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://rmarkdown.rstudio.com/flexdashboard/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;flexdashboard&lt;/em&gt;&lt;/a&gt; &amp;ndash; Create interactive &amp;ldquo;dashboards&amp;rdquo; to present data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://bookdown.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;bookdown&lt;/em&gt;&lt;/a&gt; &amp;ndash; A book format, the 
&lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R Markdown book&lt;/a&gt; is an example.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/xaringan.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;xaringan&lt;/em&gt;&lt;/a&gt; &amp;ndash; Create fancier presentation slides thanks to a JavaScript library.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Starting to use these and other output formats is often as simple as changing the YAML header:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;distill::distill_article&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;hr&gt;
&lt;h2 id=&#34;breakout-rooms&#34;&gt;Breakout rooms!&lt;/h2&gt;
&lt;p&gt;In the exercises, we will work with an &lt;code&gt;.Rmd&lt;/code&gt; file that you can download as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;
&lt;pre class=&#39;chroma&#39;&gt;&lt;code class=&#39;language-r&#39; data-lang=&#39;r&#39;&gt;&lt;span class=&#39;c&#39;&gt;# dir.create(&#34;S07&#34;)     # You should have already done this&lt;/span&gt;

&lt;span class=&#39;c&#39;&gt;# Save the URL for the Rmd file:&lt;/span&gt;
&lt;span class=&#39;nv&#39;&gt;todays_rmd&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#39;s&#39;&gt;&#39;https://raw.githubusercontent.com/biodash/biodash.github.io/master/content/codeclub/07_rmarkdown/penguins.Rmd&#39;&lt;/span&gt;

&lt;span class=&#39;c&#39;&gt;# Download the Rmd file:&lt;/span&gt;
&lt;span class=&#39;nf&#39;&gt;&lt;a href=&#39;https://rdrr.io/r/utils/download.file.html&#39;&gt;download.file&lt;/a&gt;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;url &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nv&#39;&gt;todays_rmd&lt;/span&gt;, destfile &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;s&#39;&gt;&#39;S07/penguins.Rmd&#39;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Next, open the document in RStudio, and fire up the &lt;em&gt;infinite moon reader&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;
&lt;pre class=&#39;chroma&#39;&gt;&lt;code class=&#39;language-r&#39; data-lang=&#39;r&#39;&gt;&lt;span class=&#39;c&#39;&gt;# install.packages(&#34;xaringan&#34;)&lt;/span&gt;

&lt;span class=&#39;nf&#39;&gt;xaringan&lt;/span&gt;&lt;span class=&#39;nf&#39;&gt;::&lt;/span&gt;&lt;span class=&#39;nf&#39;&gt;&lt;a href=&#39;https://rdrr.io/pkg/xaringan/man/inf_mr.html&#39;&gt;inf_mr&lt;/a&gt;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This way, you will be able to nearly instantaneously see the effect of your changes: save the document whenever you want the server to update.&lt;/p&gt;
&lt;p&gt;You can use either the &amp;ldquo;visual editor&amp;rdquo; or the regular (&amp;ldquo;source&amp;rdquo;) editor &amp;ndash; and you could also start by compating the two.&lt;/p&gt;
&lt;div class=&#34;puzzle&#34;&gt;
&lt;div&gt;
&lt;h3 id=&#34;exercise-1-output-formatting-with-yaml&#34;&gt;Exercise 1: Output formatting with YAML&lt;/h3&gt;
&lt;p&gt;In this exercise, you will fiddle with the YAML header to modify aspects of the &lt;code&gt;html_document&lt;/code&gt; output format:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add a &lt;code&gt;theme&lt;/code&gt; key to &lt;code&gt;html_output&lt;/code&gt;, and try a few of the available value options (&amp;quot;&lt;em&gt;default&lt;/em&gt;&amp;quot;, &amp;ldquo;&lt;em&gt;cerulean&lt;/em&gt;&amp;rdquo;, &amp;ldquo;&lt;em&gt;journal&lt;/em&gt;&amp;rdquo;, &amp;ldquo;&lt;em&gt;flatly&lt;/em&gt;&amp;rdquo;, &amp;ldquo;&lt;em&gt;darkly&lt;/em&gt;&amp;rdquo;, &amp;ldquo;&lt;em&gt;readable&lt;/em&gt;&amp;rdquo;, &amp;ldquo;&lt;em&gt;spacelab&lt;/em&gt;&amp;rdquo;, &amp;ldquo;&lt;em&gt;united&lt;/em&gt;&amp;rdquo;, &amp;ldquo;&lt;em&gt;cosmo&lt;/em&gt;&amp;rdquo;, &amp;ldquo;&lt;em&gt;lumen&lt;/em&gt;&amp;rdquo;, &amp;ldquo;&lt;em&gt;paper&lt;/em&gt;&amp;rdquo;, &amp;ldquo;&lt;em&gt;sandstone&lt;/em&gt;&amp;rdquo;, &amp;ldquo;&lt;em&gt;simplex&lt;/em&gt;&amp;rdquo;, &amp;ldquo;&lt;em&gt;yeti&lt;/em&gt;&amp;quot;).&lt;/p&gt;
&lt;p&gt;Determine, once and for all, what the best theme is.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try some of the other options mentioned above (&lt;code&gt;code_download&lt;/code&gt;, &lt;code&gt;code_folding&lt;/code&gt;, &lt;code&gt;toc&lt;/code&gt;, &lt;code&gt;toc_float&lt;/code&gt;, &lt;code&gt;toc_depth&lt;/code&gt;, &lt;code&gt;df_print&lt;/code&gt;), and look at the effects on the rendered output.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;details&gt;
&lt;summary&gt; Hints (click here) &lt;/summary&gt;
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To add options to &lt;code&gt;html_document&lt;/code&gt; in the YAML header, you&amp;rsquo;ll need to go from &lt;code&gt;output: html_document&lt;/code&gt; on a single line, to a multi-line format with indentation, and with a colon added after &lt;code&gt;html_document&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html_document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;option&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;br&gt;
&lt;details&gt;
&lt;summary&gt; Solutions (click here) &lt;/summary&gt; &lt;br&gt;
&lt;ul&gt;
&lt;li&gt;An example YAML header with several options added:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Penguins, demystified.&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;author&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Jelmer Poelstra&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;1/29/2021&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html_document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;flatly&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toc_float&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toc_depth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;number_sections&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;code_download&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;code_folding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hide&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;df_print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;kable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;/details&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class=&#34;puzzle&#34;&gt;
&lt;div&gt;
&lt;h3 id=&#34;exercise-2-code-chunks&#34;&gt;Exercise 2: Code chunks&lt;/h3&gt;
&lt;p&gt;Our output document looks nice, but there is plenty of room for improvement. In this exercise, we&amp;rsquo;ll refine the output using code chunk options.&lt;/p&gt;
&lt;p&gt;Before you start, take another look at the box 
&lt;a href=&#34;#code-chunk-options&#34;&gt;Code chunk options&lt;/a&gt; above.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Did you notice those messages (when the &lt;em&gt;tidyverse&lt;/em&gt; is loaded) and warnings (for the two plots) in the output? Let&amp;rsquo;s get rid of those all at once: suppress R &lt;em&gt;messages&lt;/em&gt; and &lt;em&gt;warnings&lt;/em&gt; for all chunks by adding arguments to the &lt;code&gt;knitr::opts_chunk$set()&lt;/code&gt; function in the first code chunk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Currently, the code line in the &lt;code&gt;install-package&lt;/code&gt; code chunk is commented out to avoid the code from running, while still printing it. Try to accomplish this using a code chunk option instead, so you can uncomment the line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We do want to print the code in some cases, but not in others. For the chunk labeled &lt;code&gt;print-tibble&lt;/code&gt;, which prints &lt;code&gt;penguins&lt;/code&gt;, alter the settings such that the code is no longer printed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Our first figure is kind of squished, and the point and font sizes are perhaps too large. Compare this with the second figure, which has a different setting &lt;em&gt;only&lt;/em&gt; for &lt;code&gt;out.width&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Play around with the values for the three options that are already in the code chunks (&lt;code&gt;fig.width&lt;/code&gt;, &lt;code&gt;out.width&lt;/code&gt;, and &lt;code&gt;fig.asp&lt;/code&gt;), for one or both figures, see what the effects are, and try to make some improvements.&lt;/p&gt;
&lt;p&gt;Do you understand the difference between the two methods to indicate the figure size (&lt;code&gt;fig.width&lt;/code&gt; and &lt;code&gt;out.width&lt;/code&gt;)?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Insert a new code chunk that prints the &lt;code&gt;penguins_raw&lt;/code&gt; tibble in some way (this is available in your environment).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;details&gt;
&lt;summary&gt; Hints (click here) &lt;/summary&gt;
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To suppress messages and warnings throughout:&lt;br&gt;
Add &lt;code&gt;message=FALSE&lt;/code&gt; and &lt;code&gt;warnings=FALSE&lt;/code&gt; inside &lt;code&gt;knitr::opts_chunk$set()&lt;/code&gt; in the &lt;code&gt;setup&lt;/code&gt; chunk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To avoid running the code:&lt;br&gt;
Use &lt;code&gt;eval=FALSE&lt;/code&gt; in the header of the &lt;code&gt;install-package&lt;/code&gt; code chunk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To avoid printing the code:&lt;br&gt;
Use the &lt;code&gt;echo&lt;/code&gt; option in the header of the &lt;code&gt;print-tibble&lt;/code&gt; code chunk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Figure sizing:&lt;br&gt;
There are two types of sizes that you can set: the size at which R creates figures (&lt;code&gt;fig.width&lt;/code&gt; and &lt;code&gt;fig.height&lt;/code&gt;), and the size at which the figures are inserted in the document (&lt;code&gt;out.width&lt;/code&gt; and &lt;code&gt;out.height&lt;/code&gt;). The former will effectively only control relative font and point sizes, whereas the latter controls the &amp;ldquo;actual&amp;rdquo; / final size. For more details and advice, see 
&lt;a href=&#34;https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this section&lt;/a&gt; in R for Data Science.&lt;/p&gt;
&lt;p&gt;The aspect ratio (&lt;code&gt;fig.asp&lt;/code&gt;) is height/width, so a value smaller than one creates a wide figure and a value larger than one creates a narrow figure.&lt;/p&gt;
&lt;p&gt;Here, we&amp;rsquo;ve been setting width only &amp;ndash; you can also set &lt;code&gt;fig.height&lt;/code&gt; and &lt;code&gt;out.height&lt;/code&gt;, but these options become redundant when you set the width &lt;em&gt;and&lt;/em&gt; the aspect ratio.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;br&gt;
&lt;details&gt;
&lt;summary&gt; Solutions (click here) &lt;/summary&gt; &lt;br&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To suppress messages and warnings throughout:&lt;br&gt;
&lt;code&gt;knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To avoid running the code: &lt;code&gt;{r install-package, eval=FALSE}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To avoid printing the code:&lt;br&gt;
&lt;code&gt;{r print-tibble, echo=FALSE}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Figure sizing:&lt;br&gt;
Example settings for better-sized figures &amp;ndash;&lt;br&gt;
&lt;code&gt;{r plot-bills, out.width=&amp;quot;80%&amp;quot;, fig.width=6, fig.asp=0.7}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A code chunk to print the &lt;code&gt;penguins_raw&lt;/code&gt; tibble (replace single quotes by backticks):&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;
&lt;pre&gt;&lt;code&gt;&#39;&#39;&#39;{r}
penguins_raw
&#39;&#39;&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;/details&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class=&#34;puzzle&#34;&gt;
&lt;div&gt;
&lt;h3 id=&#34;bonus-1-markdown-and-inline-code&#34;&gt;Bonus 1: Markdown and inline code&lt;/h3&gt;
&lt;p&gt;The formatting for the prose in our document could also be improved. For instance:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use inline code &lt;em&gt;formatting&lt;/em&gt; in a couple of cases where this is appropriate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Instead of simply saying &amp;ldquo;8 variables (n = 344 penguins)&amp;rdquo; (under the &lt;em&gt;Summary of the dataset&lt;/em&gt;&amp;quot; heading), use &lt;em&gt;inline R code&lt;/em&gt; that makes these calculations and print the results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try a couple of other things: heading levels (one of them is currently not right!), &lt;em&gt;italic&lt;/em&gt; text, &lt;strong&gt;bold&lt;/strong&gt; text, and/or ordered (numbered) and unordered (bulleted) lists.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;details&gt;
&lt;summary&gt; Hints (click here) &lt;/summary&gt;
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Simply put backticks around the inline text you want have formatted as code. You can do this, for instance, for mentions of 
&lt;a href=&#34;https://allisonhorst.github.io/palmerpenguins/reference/penguins.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;palmerpenguins::penguins&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For inline code that runs, use &lt;code&gt;`r my-code`&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The number of variables and penguins in the penguin dataset are the number of columns and rows, respectively, in the &lt;code&gt;penguin&lt;/code&gt; tibble.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;br&gt;
&lt;details&gt;
&lt;summary&gt; Solutions (click here) &lt;/summary&gt; &lt;br&gt;
&lt;p&gt;Inline calculation of the number of variables and penguins:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[...] that contains `r ncol(penguins)` variables
(n = `r nrow(penguins)` penguins).
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;/details&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class=&#34;puzzle&#34;&gt;
&lt;div&gt;
&lt;h3 id=&#34;bonus-2-other-output-formats&#34;&gt;Bonus 2: Other output formats&lt;/h3&gt;
&lt;p&gt;Try one or more output formats other than &lt;code&gt;html_document&lt;/code&gt;, see 
&lt;a href=&#34;https://rmarkdown.rstudio.com/docs/reference/index.html#section-output-formats&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this website&lt;/a&gt; for the list of available options. If you want to try presentations, note that three dashes &lt;code&gt;---&lt;/code&gt; are used to separate slides.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
&lt;div&gt;
&lt;p&gt;It might be confusing that on the website linked to above (see also the screenshot in section V), the output formats are listed &lt;em&gt;functions&lt;/em&gt; (&lt;code&gt;html_document()&lt;/code&gt; rather than &lt;code&gt;html_document&lt;/code&gt;) &amp;ndash; but this is simply because under the hood, these functions are called via the YAML header.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br&gt; &lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;go-further&#34;&gt;Go further&lt;/h2&gt;
&lt;h4 id=&#34;pitfalls--tips&#34;&gt;Pitfalls / Tips&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The working directory&lt;/strong&gt;&lt;br&gt;
By default, the working directory for an R Markdown document is the directory in which the file resides.&lt;/p&gt;
&lt;p&gt;This can be a bit annoying if you&amp;rsquo;re used to using your project&amp;rsquo;s root directory as your working directory (which you should be) and the R Markdown file is not in the project&amp;rsquo;s root directory (which it probably shouldn&amp;rsquo;t be). Nevertheless, simply using &lt;code&gt;../&lt;/code&gt; notation to move one or two directories up should generally work.&lt;/p&gt;
&lt;p&gt;If you really need to set a different working directory, you should be aware that surprisingly, setting the working directory with &lt;code&gt;setwd()&lt;/code&gt; in a code chunk is &lt;strong&gt;not persistent&lt;/strong&gt; across code chunks. To set a different working directory for the entire document, use &lt;code&gt;knitr::opts_knit$set(root.dir = &#39;/my/working/dir&#39;)&lt;/code&gt; in a setup chunk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Chunk labels&lt;/strong&gt;&lt;br&gt;
Chunk labels are optional but if you do give them, note that they have to be &lt;em&gt;unique&lt;/em&gt;: the document will fail to render if have two chunks with the same label. Also, &lt;em&gt;avoid using spaces and underscores in the labels&lt;/em&gt; (&lt;code&gt;good-chunk-label&lt;/code&gt;, &lt;code&gt;bad chunk label&lt;/code&gt;, &lt;code&gt;bad_chunk_label&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h4 id=&#34;tables&#34;&gt;Tables&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tables produced by Markdown text&lt;/strong&gt;&lt;br&gt;
The syntax for basic Markdown tables is as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| Time          | Session | Topic    |
|:--------------|:-------:|---------:|
| _left_        | _center_| _right_  |
| Wed 5 pm      | 1       | Getting started  |
| Fri 3 pm      |         |          |
| Wed 5 pm      | 2       | *dplyr*  |
| Fri 3 pm      |         | *Break*  |
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Time&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Session&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Topic&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;left&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;center&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;em&gt;right&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Wed 5 pm&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;Getting started&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Fri 3 pm&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Wed 5 pm&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;em&gt;dplyr&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Fri 3 pm&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;em&gt;Break&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In the Visual Markdown editor in RStudio, you can simply insert a table with a little dialogue box after clicking &lt;code&gt;Table&lt;/code&gt; =&amp;gt; &lt;code&gt;Insert Table&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tables (dataframes) produced by R code&lt;/strong&gt;&lt;br&gt;
Using &lt;code&gt;kable(my_df)&lt;/code&gt; in a code chunk will create nicer output for individual dataframes (recall the &lt;code&gt;df_print: kable&lt;/code&gt; YAML option for document-wide &amp;ldquo;kable&amp;rdquo; printing).&lt;/p&gt;
&lt;p&gt;There are many packages available for more advanced options, such as 
&lt;a href=&#34;https://gt.rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;GT&lt;/em&gt;&lt;/a&gt;, 
&lt;a href=&#34;https://rstudio.github.io/DT/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;DT&lt;/em&gt;&lt;/a&gt;, and 
&lt;a href=&#34;https://glin.github.io/reactable/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;reactable&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h4 id=&#34;websites&#34;&gt;Websites&lt;/h4&gt;
&lt;p&gt;Note that &lt;code&gt;rmarkdown::render_site()&lt;/code&gt; can create simple websites that connects multiple pages with a navigation bar. All you need is a simple YAML file called &lt;code&gt;_site.yml&lt;/code&gt; with some settings, and a file for the front page which needs to be called &lt;code&gt;index.Rmd&lt;/code&gt;. See 
&lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/rmarkdown-site.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here in the R Markdown book&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Options with more features, like a blog, are 
&lt;a href=&#34;https://rstudio.github.io/distill/website.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;distill websites&lt;/em&gt;&lt;/a&gt;, and the 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;blogdown&lt;/em&gt; package&lt;/a&gt; for Hugo sites.&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;further-resources&#34;&gt;Further resources&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Free online books by the primary creator of R Markdown and other authors:
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R Markdown &amp;ndash; The Definitive Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/rmarkdown-cookbook/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R Markdown Cookbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio&amp;rsquo;s 5-page R Markdown Reference PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/rstudio/cheatsheets/raw/master/rmarkdown-2.0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio&amp;rsquo;s R Markdown Cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://rmarkdown.rstudio.com/lesson-1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio R Markdown lessons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://commonmark.org/help/tutorial/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
