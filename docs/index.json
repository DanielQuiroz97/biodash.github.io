[{"authors":["admin"],"categories":null,"content":"Jelmer Poelstra started at the MCIC (Molecular and Cellular Imaging Center) in June 2020, where he provides bioinformatics support and education. His background is in evolutionary and population genetics, and most of his research has focused on understanding speciation using genomic approaches.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1603299924,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://mcic2.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Jelmer Poelstra started at the MCIC (Molecular and Cellular Imaging Center) in June 2020, where he provides bioinformatics support and education. His background is in evolutionary and population genetics, and most of his research has focused on understanding speciation using genomic approaches.","tags":null,"title":"Jelmer Poelstra","type":"authors"},{"authors":["jessica-cooperstone"],"categories":null,"content":"Jessica Cooperstone is an Assistant Professor in Horticulture and Crop Science, and Food Science and Technology at The Ohio State University working at the intersection of plant science and human nutrition.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1603214439,"objectID":"da60494872ddaf739115b5da033f1fed","permalink":"https://mcic2.github.io/authors/jessica-cooperstone/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/jessica-cooperstone/","section":"authors","summary":"Jessica Cooperstone is an Assistant Professor in Horticulture and Crop Science, and Food Science and Technology at The Ohio State University working at the intersection of plant science and human nutrition.","tags":null,"title":"Jessica Cooperstone","type":"authors"},{"authors":["michael-broe"],"categories":null,"content":"Michael Broe is a Bioinformatics Research Scientist at the Department of Evolution, Ecology, and Organismal Biology.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1603299924,"objectID":"f515857d0961e2ded569db22cc57c70c","permalink":"https://mcic2.github.io/authors/michael-broe/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/michael-broe/","section":"authors","summary":"Michael Broe is a Bioinformatics Research Scientist at the Department of Evolution, Ecology, and Organismal Biology.","tags":null,"title":"Michael Broe","type":"authors"},{"authors":["mike-sovic"],"categories":null,"content":"Mike Sovic is a Bioinformatics Research Scientist at CAPS, the Center for Applied Plant Sciences.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1603299924,"objectID":"e25a3ca217243530f65efb3cd930207b","permalink":"https://mcic2.github.io/authors/mike-sovic/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/mike-sovic/","section":"authors","summary":"Mike Sovic is a Bioinformatics Research Scientist at CAPS, the Center for Applied Plant Sciences.","tags":null,"title":"Mike Sovic","type":"authors"},{"authors":["stephen-opiyo"],"categories":null,"content":"Stephen Opiyo is a bioinformatics and biostatistics research scientist at MCIC Columbus.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1603299924,"objectID":"9c82e356b8ac88d63b60055c202796b4","permalink":"https://mcic2.github.io/authors/stephen-opiyo/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/stephen-opiyo/","section":"authors","summary":"Stephen Opiyo is a bioinformatics and biostatistics research scientist at MCIC Columbus.","tags":null,"title":"Stephen Opiyo","type":"authors"},{"authors":["Jelmer Poelstra","Mike Sovic","Stephen Opiyo","Michael Broe","Jessica Cooperstone"],"categories":[],"content":"Welcome to OSU Code Club! Materials for each episode will be provided in posts on this page. For more information about OSU Code Club, see the About Code Club page.\n      \n","date":1603065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1603158539,"objectID":"d0ea931c1e6e379ece4ecffd594d60af","permalink":"https://mcic2.github.io/post/welcome-to-codeclub/","publishdate":"2020-10-19T00:00:00Z","relpermalink":"/post/welcome-to-codeclub/","section":"post","summary":"Welcome to OSU Code Club! Materials for each episode will be provided in posts on this page. For more information about OSU Code Club, see the About Code Club page.","tags":["codeclub"],"title":"E00 - Welcome to Code Club","type":"post"},{"authors":null,"categories":null,"content":"All material is released under a Creative Commons Attribution-ShareAlike 4.0 International License.\n   ","date":1578092400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1601687264,"objectID":"53e892b8b41cc4caece1cfd5ef21d6e7","permalink":"https://mcic2.github.io/license/","publishdate":"2020-01-04T00:00:00+01:00","relpermalink":"/license/","section":"","summary":"All material is released under a Creative Commons Attribution-ShareAlike 4.0 International License.\n   ","tags":null,"title":"LICENSE: CC-BY-SA","type":"page"},{"authors":null,"categories":null,"content":"About BioDASH The BioDASH aims to assemble bioinformatic and computational training resources for researchers at The Ohio State University. It\u0026rsquo;s a joint initiative by bioinformaticians at OSU\u0026rsquo;s Molecular and Cellular Imaging Center (MCIC) - Computational Biology Lab, Center for Applied Plant Sciences (CAPS), and Department of Evolution, Ecology and Organismal Biology (EEOB).\nAs of October 2020, this is still very much a work in progress, but more content will be added soon!\nMain contributors  Jelmer Poelstra, MCIC Wooster\n Mike Sovic, CAPS\n Michael Broe, EEOB\n   \n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"https://mcic2.github.io/about/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/about/","section":"","summary":"About BioDASH The BioDASH aims to assemble bioinformatic and computational training resources for researchers at The Ohio State University. It\u0026rsquo;s a joint initiative by bioinformaticians at OSU\u0026rsquo;s Molecular and Cellular Imaging Center (MCIC) - Computational Biology Lab, Center for Applied Plant Sciences (CAPS), and Department of Evolution, Ecology and Organismal Biology (EEOB).","tags":null,"title":"","type":"page"},{"authors":null,"categories":null,"content":"About OSU Code Club OSU Code Club is a regularly occurring, interactive, online gathering to improve coding skills. We aim for a supportive and fun culture of learning together, and hope to offer something to participants at any experience level.\nIn each meeting, a presenter first introduces a concept or tool to be used for a challenge. Then, we work on the challenge in pairs or trios in Zoom \u0026ldquo;breakout rooms,\u0026rdquo; and finally, we reconvene to see what approaches were taken and to share lessons learned.\nThe idea for this Code Club was taken from a recent paper in PLoS Computational Biology: Ten simple rules to increase computational skills among biologists with Code Clubs. We liked this idea because of the high level of interaction and because gradual, well-spaced practice is an excellent way to retain what you learn.\nJoin us \u0026mdash; and perhaps present a session too! As the organizers, we are happy to present sessions, but we hope that as a participant, you will also want to do so.\nFor example, you could consult the group about an actual challenge you are facing in your data analysis. You could also introduce everyone to an new package or approach you\u0026rsquo;ve been using, or one that you are excited about and want to dive into \u0026ndash; teaching a topic can be one of the best ways to learn it!\nPractical information  In the first series, we will focus on all things R: from data analysis and visualization to efficient coding, R Markdown, and so on. There will be no consistent analysis type or data type \u0026mdash; instead, we will focus on building general skills and applying those to a wide variety of data. Each week, materials and suggested reading will be posted up front at the Sessions page. Like at a Journal Club, doing some preparatory homework by reading these materials will help you get the most out of it. Each session is intended to be mostly stand-alone to allow for occasional participation. To allow for a welcoming environment for participants at all levels of experience, we ask everyone to be respectful, patient, and collaborative when interacting at Code Club. This is not a competitive event. We have a separate page with computer setup instructions, where you\u0026rsquo;ll see that we also accommodate participating through your browser without any installations. We also have a form to suggest topics for Code Club!  Sign up To sign up, please fill out the Google Form below.\n Hope to see you at Code Club!\nJelmer Poelstra, Mike Sovic, Stephen Opiyo, Michael Broe, and Jessica Cooperstone\nLoadingâ€¦    \n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"affd8a75456abca4d01de73213cffddb","permalink":"https://mcic2.github.io/codeclub-about/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/codeclub-about/","section":"","summary":"About OSU Code Club OSU Code Club is a regularly occurring, interactive, online gathering to improve coding skills. We aim for a supportive and fun culture of learning together, and hope to offer something to participants at any experience level.","tags":null,"title":"","type":"page"},{"authors":null,"categories":null,"content":"For presenters   Each Code Club session represents a blogpost on the website at https://biodash.github.io/post/.\n  Regular presenters will be given direct access to the Github repository and will be able to push a new post to the website directly.\n  Occasional presenters can either send their material directly to Jelmer or create a \u0026ldquo;pull request\u0026rdquo; with their new post.\n  Step 1: Get the repo You only need to do this if you want to create a pull request or push your content to the website directly. If you want to send your R Markdown file by email, skip this and continue to Step 2.\nThe following assumes you have git installed (if not, see these instructions), and a Github account (if not, sign up here).\n  Go to a dir that you would like to be the parent dir of the Biodash/Codeclub repo:\ncd my-dir   Clone the repo:\ngit clone git@github.com:biodash/biodash.github.io.git   Move into the newly downloaded repo dir:\ncd biodash   Create a new branch (by way of example called \u0026ldquo;my-branch\u0026rdquo;) and switch to it:\ngit checkout -b my-branch   Step 2: Create a new post in R   Start an R session.\n  If you don\u0026rsquo;t have the hugodown package installed, install it:\nremotes::install_github(\u0026#34;r-lib/hugodown\u0026#34;)   A post bundle is a separate folder for a post which will hold the R Markdown file that contains the post, as well as associated images and so on. To create a post bundle along with a R Markdown file that already has many useful YAML header tags:\nhugodown::use_post(\u0026#39;post/\u0026lt;session-number\u0026gt;_\u0026lt;short-title\u0026gt;\u0026#39;) # An example would be: hugodown::use_post(\u0026#39;post/01_intro-to-R\u0026#39;) The \u0026lt;session-number\u0026gt; is the actual Code Club session number, and \u0026lt;short-title\u0026gt; is a short title that you would like to give the post, which will be used for links and the folder name.\n  Write your actual post in R Markdown format.\n  Convert your .Rmd (R Markdown) file to a .md (Markdown) file, which is done most easitly by \u0026ldquo;knitting\u0026rdquo; your post in RStudio by clicking Knit in the top bar or pressing Ctrl + Shift + K.\n  Step 3: Check your post on a locally rendered website (optional) You can do this in two ways, from RStudio or from the command line.\nOption A: In RStudio   Install Hugo:\nhugodown::hugo_install(\u0026#34;0.66.0\u0026#34;)   Preview the site:\nhugodown::hugo_start()   Option B: From the command line   Install Hugo using these instructions.\n  Serve the website locally:\nhugo serve You will see a message that includes \u0026ldquo;Web Server is available at [\u0026hellip;]\u0026rdquo;. Click the link or copy and paste the address into a browser, and you will see the rendered website. Until you press Ctrl + C on the command line, the server will keep running and will update whenever you save changes in a file within the website directory.\n  Step 4: Commit your changes   Add the files from your post:\ngit add post/\u0026lt;your-post-name\u0026gt;/*   Commit:\ngit commit -m \u0026#34;Add CodeClub session \u0026lt;session-nr\u0026gt; by \u0026lt;your-name\u0026gt;\u0026#34;   Step 5: Get your post onto the website repo Your Markdown (.md) file will be built along with the rest of the website by a program called Hugo (Hugo does not recognize R Markdown (Rmd) files, that\u0026rsquo;s why you needed to Knit your R Markdown yourself).\nThis will eventually be done automatically via Github actions; but as long as that has not yet been set up, Jelmer will manually call Hugo to build the website.\nOption A: Create a pull request When you create a pull request, you are asking the maintainers of a repository to pull your changes into their repository.\n  Push to your branch:\ngit push origin my-branch   Create the pull request:\n Go to the Pull requests page of our repo at https://github.com/biodash/biodash.github.io/pulls. Click the green button on the right that says New pull request. In the grey bar on top, in the button that says Compare: \u0026lt;branch\u0026gt;, make sure the branch specifiied is your branch, which we\u0026rsquo;ve named my-branch in these instructions. Enter a title (e.g. \u0026ldquo;New Post: Session 6\u0026quot;) and description (say a little more about the post) for the pull request. Click the green button Send pull request.    Option B: Push to the site repo (direct access required)   Merge your branch with the main (master) branch:\ngit checkout master # Move to the master branch prior to merging git merge my-branch # Merge into master (assuming your branch was named \u0026#34;my-branch\u0026#34;)   Push to the master branch:\ngit push origin master      \n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"d2a87fb5a2b4f8e331f2a7033b4ca3df","permalink":"https://mcic2.github.io/codeclub-present/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/codeclub-present/","section":"","summary":"For presenters   Each Code Club session represents a blogpost on the website at https://biodash.github.io/post/.\n  Regular presenters will be given direct access to the Github repository and will be able to push a new post to the website directly.","tags":null,"title":"","type":"page"},{"authors":null,"categories":null,"content":"Upcoming sessions Here we will post a tentative schedule for the next few sessions. Stay tuned for more!\n  First session: week of November 9th.\n  We\u0026rsquo;ll start with exploring some OSU admission and enrollment data!\n  Some coding topics we\u0026rsquo;ll likely touch on in the first sessions:\n Reading and writing data Tidy data Data wrangling Good workflow habits (paths, here(), and .Rproj) Factors \u0026ndash; why \u0026amp; when How to avoid repeating yourself Writing your own functions What\u0026rsquo;s new in dplyr 1.0       \n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"21036bb90326781dbc3f5f76a5396fb3","permalink":"https://mcic2.github.io/codeclub-schedule/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/codeclub-schedule/","section":"","summary":"Upcoming sessions Here we will post a tentative schedule for the next few sessions. Stay tuned for more!\n  First session: week of November 9th.\n  We\u0026rsquo;ll start with exploring some OSU admission and enrollment data!","tags":null,"title":"","type":"page"},{"authors":null,"categories":null,"content":"Computer setup Here, you will find some general information on computer setup for Code Club. Additional setup for individual sessions (e.g., installing a specific package), will be stated clearly in the posts for each session.\nYou may prefer to install the software locally, so you can easily practice outside of Code Club. Alternatively, you can access RStudio (as well as the terminal and Jupyter Notebooks) through your browser at the Ohio Supercomputer Center (OSC), where Code Club has a Classroom Project.\nLocal installation Summary of what you need  R \u0026ndash; preferably version \u0026gt;= 4.0.0, but at least 3.0.1 RStudio R packages that we will regularly use:  tidyverse    Install R  Windows: Download and run the .exe file for the latest version of R from https://cran.r-project.org/bin/windows/base/, by clicking the large Download R [version-number] for Windows link at the top of the gray box. Mac: Download and run the .pkg file for the latest version of R from https://cran.r-project.org/bin/macosx/, by clicking the link just below Latest release. On a Linux distribution, you can also install R using the website above, but you may prefer to use a package manager instead \u0026ndash; for instance, seee these instructions for installing the latest R version on Ubuntu 20.04 using the apt package manager.  Install RStudio RStudio is a so-called Interactive Development Environment (IDE) for R, with side-by-side panes for an R script, an R concole, plots, help documents, and much more. While it is perfectly possible to use R without RStudio, RStudio has become the de facto standard for working with R and is very useful.\nTo install RStudio, go to the RStudio download page and download and run the installer file for your operating system.\nInstall the tidyverse Install the tidyverse, which is a collection of useful packages, by typing the following command inside an R console:\ninstall.packages(\u0026#34;tidyverse\u0026#34;) \nAdditional info about setting up R Updating R If you have an older version of R already installed, consider updating it (certainly do this your R version is below 3.0.1, and preferably do this if your R version is below 4.0).\n Windows: Use the function installr::updateR() in an R console (if needed, first install installr using install.packages(\u0026quot;installr\u0026quot;)). Mac: Download and install the latest .pkg file as if you were installing it for the first time. Linux: In Ubuntu, if you installed R with apt or apt-get, you can use apt-get upgrade in a terminal. Otherwise, download and install the latest version after removing the old one. Rtask has some instructions for upgrading to R 4.0 in Ubuntu (along with upgrading to Ubuntu 20.04).  Re-installing your packages after updating (Mac and Linux) While the installr::updateR() function for Windows users takes care of reinstalling your packages along with updating R, Mac and Linux users will have to manually re-install their packages. Some people prefer to re-install these packages on the fly, which can end up being a way to get rid of packages you no longer use.\nBut if you want immediately reinstall all your packages, run this before you upgrade:\nmy_packages \u0026lt;- installed.packages() saveRDS(my_packages, \u0026#34;my_packages.rds\u0026#34;) Then, after you\u0026rsquo;ve installed the latest R version:\nmy_packages \u0026lt;- readRDS(\u0026#34;CurrentPackages.rds\u0026#34;) install.packages(my_packages[1, ]) This will only work for packages available on CRAN. Of course, you can check your list for Github-only and Bioconductor packages and then install those with their respective commands (see below). Yes, this can be a bit of a hassle!\nInstalling R packages To install an R package that is available at CRAN, the default R package repository, from within R (e.g. in the R console in RStudio), use the install.packages() function.\nThe install.packages() function will handle dependencies within R \u0026ndash; i.e., it will install other R packages that your package depends on. Occasionally, when the install function needs to compile a package from source, errors arise that relate to missing system dependencies (i.e. software outside of R).\nOn Mac and Linux, these system dependencies are best installed outside of R, such as with homebrew on Mac or apt on Ubuntu. The installation errror message should tell you which libraries are needed.\nOn Windows, you can use the installr package to install such dependencies or other software from within R \u0026ndash; for example:\ninstall.packages(\u0026#34;installr\u0026#34;) # Install the installr package first installlr::install.RStudio() # Install RStudio installr::install.python() # Install Python Packages from other sources Some packages are not available on CRAN. The two main alternative places that you may want to install packages from are Github and (if you are working with bioinformatics data) Bioconductor.\nTo install a package from Github, use the remotes package \u0026ndash; for example:\ninstall.packages(\u0026#34;remotes\u0026#34;) # Install the remotes package remotes::install_github(\u0026#34;kbroman/broman\u0026#34;) # Install from a repository using \u0026#34;\u0026lt;username\u0026gt;/\u0026lt;repo-name\u0026gt;\u0026#34; To install a package from Bioconductor, use the BiocManager package \u0026ndash; for example:\ninstall.packages(\u0026#34;BiocManager\u0026#34;) # Install the BiocManager package BiocManager::install(\u0026#34;edgeR\u0026#34;) # Install the edgeR package from Bioconductor Useful settings By default, R will try to save your \u0026ldquo;environment\u0026rdquo; (e.g., your loaded data, variables, etc) when you exit, and then reload everything the way it was upon restarting R. However, this is bad! You should always be able to reproduce your environment given a set of commands saved in an R script or R Markdown document, whereas saving and reloading your environment encourages you to be sloppy about this.\nTo disable this in RStudio, go to Tools \u0026gt; Global Options \u0026gt; General and set the options as follows:\n  Recommended R/RStudio settings   To start R in the same way from the command line:\nR --no-save --no-restore-data \nOSC Sign up at OSC All Code Club participants automatically get access to the OSC Classroom Project for Code Club (PAS1838). This way, you can work e.g. in RStudio from your browser rather than with a local installation. However, you only need to do this if you prefer not to install anything, or if you have problems with locally installing the software or individual packages \u0026ndash; we will not be running heavy computational analyses that will require the use of the cluster.\nIf you don\u0026rsquo;t already have an OSC account, you do need to sign up:\n Go to https://my.osc.edu/ and click the blue \u0026ldquo;Sign Up\u0026rdquo; bar. In the bottom right portion of the form where you provide your info (see screenshot below), you should enter Code Club\u0026rsquo;s Project Code, which is PAS1838.    Enter Project Code PAS1838 in the red box (click to enlarge)   Use RStudio with OSC OnDemand OSC OnDemand lets you access OSC resources through your browser and run a couple of applications with GUIs, like RStudio.\n To get started, go to https://ondemand.osc.edu/ and log in with your OSC username and password. Then, click on Interactive Apps in the blue top bar, and select RStudio Server (Owens and Pitzer). Now, you\u0026rsquo;re on a page from which you can launch an RStudio server that will run on an OSC cluster.  Under Cluster, either Owens or Pitzer will work. Under R version, keep the default of 4.02. Under Project, if PAS1838 is not already entered, enter it. Under Number of hours, enter 2. Under Node type, keep the default of any. Under Number of cores, keep the default of 1. Keep the box I would like to receive an email when the session starts unchecked. Click Launch.   Now, you should see a box like this:    Your job should start running pretty soon, and when it\u0026rsquo;s ready the box should look like this:    Click Connect to RStudio Server at the bottom of the box, and an RStudio Server instance will open. You\u0026rsquo;re ready to go!  General info about using OSC The above instructions should be all you need to access RStudio using OSC, but there is lot more to OSC than that! For more information about using OSC, their website has excellent resources \u0026ndash; if you work your way through the Getting Started materials, you should be pretty far along! In particular, once you\u0026rsquo;re up and running with the basics, it\u0026rsquo;s worth looking through the topics in the HOWTOs.\nOur very own Mike Sovic also has a YouTube playlist \u0026ldquo;Getting Started With High Performance Computing (HPC)\u0026quot; at his channel The Data Point.\n   \n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a19fd71e3dc86af820a45dabc994dda5","permalink":"https://mcic2.github.io/codeclub-setup/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/codeclub-setup/","section":"","summary":"Computer setup Here, you will find some general information on computer setup for Code Club. Additional setup for individual sessions (e.g., installing a specific package), will be stated clearly in the posts for each session.","tags":null,"title":"","type":"page"},{"authors":null,"categories":null,"content":"Suggest a Code Club Topic! Please use the form below to suggest a topic or concept to be covered at Code Club. You are also welcome to leave a suggestion relating to the general format, organization, or presentation of Code Club.\nIf you suggest a topic, a broad range of suggestions are welcome \u0026ndash; it need not fit neatly as a single Code Club session. So your suggestion can be as broad as \u0026ldquo;object-oriented programming\u0026rdquo; or as specific as a single R function that you happen to struggle with or that you just really like.\nWe do note that we prefer to cover topics that could be \u0026ndash;at least in principle\u0026ndash; of interest to a broad range of people, and are not specific to a certain data type. For instance, we would generally be hesitant to cover in detail the high-level functions of an R package to analyze microbiomic data.\nLoadingâ€¦    \n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"aa47a17260af4b87dc29397d821ae7fd","permalink":"https://mcic2.github.io/codeclub-suggest/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/codeclub-suggest/","section":"","summary":"Suggest a Code Club Topic! Please use the form below to suggest a topic or concept to be covered at Code Club. You are also welcome to leave a suggestion relating to the general format, organization, or presentation of Code Club.","tags":null,"title":"","type":"page"},{"authors":null,"categories":null,"content":"Other Events At this page, we will list upcoming events related to computational biology, coding, and data analysis. If you know of an event that you think should be listed here, please use the form in the Suggest\u0026hellip; page.\nRecurring Events  Tn-seq working group  A working group dedicated to the analysis of Transposon-seq (Tn-seq) data. Every Monday from 10-11 am. Contact Mike Sovic for details.     MCIC bioinformatics office hour  Need some quick advice or help? Drop by! Every Tuesday from 2-4 pm: Zoom link. Anyone is welcome \u0026ndash; advance notice to Jelmer Poelstra is appreciated.     Center of Microbiome Center working groups  CoMS is running Virome, Microbiome, and Advanced Ecological Statistics working groups, see their page for more details.    Workshops Upcoming Outside of OSU  For Ohio Supercomputer Center events, such as regular introductory sessions to computing at OSC, see the OSC Events page.  Relevant OSU Courses   M5161: Introduction to Computational Genomics  M8161: Microbiome Informatics  PLNTPTH 7003.01: Agricultural Genomics: Principles and Applications  HCS 7806: Current Topics and Methods Courses  Includes \u0026ldquo;Genome Analytics\u0026rdquo; and \u0026ldquo;Methods in Data Visualization\u0026rdquo;.    ENR8600: Introduction to R for Environmental Sciences  MOLGEN 5645: Quantitative, Population, and Evolutionary Genetics  MOLGEN 5623: Genetics and Genomics  STAT 6625: Statistical Analysis of Genetic Data  STAT 6730: Introduction to Computational Statistics  FDSCTE 7600: Metabolomics, Principles and Practice  Past Events    \n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"426d522fcb82973f95d828bcc08f03ff","permalink":"https://mcic2.github.io/events/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/events/","section":"","summary":"Other Events At this page, we will list upcoming events related to computational biology, coding, and data analysis. If you know of an event that you think should be listed here, please use the form in the Suggest\u0026hellip; page.","tags":null,"title":"","type":"page"},{"authors":null,"categories":null,"content":"Material Here, we will post tutorials, analysis pipelines, instructional videos, slidedecks, materials from past workshops, and so on. Stay tuned!\nFor now, have a look at the MCIC/MCBL\u0026rsquo;s Read-the-Docs site and at CAPS/Mike Sovic\u0026rsquo;s Youtube Channel.\n   \n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"4f38a30d7b59cc95eec7edb025f56bf6","permalink":"https://mcic2.github.io/material/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/material/","section":"","summary":"Material Here, we will post tutorials, analysis pipelines, instructional videos, slidedecks, materials from past workshops, and so on. Stay tuned!\nFor now, have a look at the MCIC/MCBL\u0026rsquo;s Read-the-Docs site and at CAPS/Mike Sovic\u0026rsquo;s Youtube Channel.","tags":null,"title":"","type":"page"},{"authors":null,"categories":null,"content":"Suggest a topic or event If there is a topic you would like to see covered on this website, an event you would like to see happen, or an event you think should be listed under Events, please fill out the form below. You can also indicate whether you would like to help with this content or event!\nLoadingâ€¦    \n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"ec134bd5815c50401fba8e9a987eda12","permalink":"https://mcic2.github.io/suggest/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/suggest/","section":"","summary":"Suggest a topic or event If there is a topic you would like to see covered on this website, an event you would like to see happen, or an event you think should be listed under Events, please fill out the form below.","tags":null,"title":"","type":"page"},{"authors":null,"categories":null,"content":"Bioinformatics support Need some assistance in bioinformatics, high-throughput sequencing data analysis, working with big data, etc? See below for a list of support options for OSU researchers\u0026hellip;\nMCIC The Molecular and Cellular Imaging Center (MCIC) is an OSU core facility with locations at the Wooster and Columbus campuses. Among other things, the MCIC provides end-to-end support for genomics projects \u0026mdash; from experimental design, library preparation, and sequencing, to infrastructure for and assistance with data analysis.\nThe bioinformatics section of the MCIC, the MCBL (MCIC Computational Biology Laboratory), works based on a membership model. MCBL members have access to bioinformatics support, our project at the Ohio Supercomputer Center for storage and computing, our two in-house servers, our computer lab in Wooster, and free access to workshops. To become a member, please fill out this form.\nFor bioinformatics consultation, anyone is free to contact Jelmer Poelstra or drop by at the Bioinformatics Office Hour over Zoom every Tuesday between 2 and 4 pm ( Zoom link - advance notice is appreciated!).\nCAPS The Center for Applied Plant Sciences (CAPS) supports OSU researchers working in the plant sciences. CAPS research scientist Mike Sovic leads bioinformatic support efforts for the Center. Details on opportunities and resources available through CAPS are at http://caps.osu.edu/bioinformatics.\nEEOB TBA\nRequest support Loadingâ€¦    \n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"6f03e42d6bae7b75ea525bec87eb719f","permalink":"https://mcic2.github.io/support/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/support/","section":"","summary":"Bioinformatics support Need some assistance in bioinformatics, high-throughput sequencing data analysis, working with big data, etc? See below for a list of support options for OSU researchers\u0026hellip;\nMCIC The Molecular and Cellular Imaging Center (MCIC) is an OSU core facility with locations at the Wooster and Columbus campuses.","tags":null,"title":"","type":"page"}]